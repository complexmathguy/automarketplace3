#
# Standard DevOps project creation options.  
#
# Pay close attention to parameters that require values unique  
# to you, such as those for Git, Docker, and AWS.
#
# To use Git, Docker, and any provider, be sure to have created
# an account with each.  
#
# For Git, before generating the project be sure to create the 
# repository and designate as public.
#

project:
    name: Axon Mongo CRUD Demo
    description: Sample Axon Mongo project
    techstack:
        name:             Axon4                   
                           # To see the list of available tech stacks on a Harbormaster instance use command:
                           #     harbormaster_cli stack_list --output pretty

    model:
        name:             company-event-model
                           # options:     Unique name of an existing model, a URL to a model file or Git repo, 
                           #                or full/relative path to a model file.
                           #
                           # To see the list of supported model types use command:
                           #      harbormaster_cli model_types_supported
                           #                          
                           # To see the list of available models on a Harbormaster instance use command:
                           #      harbormaster_cli model_list --output pretty
                           # 
                           # For JAR files and Git Repos with Java Files, include the root package names of the root package
#            javaRootPackageNames:
#              - com.freeport.bo    
#            primaryKeyPattern: _pojoName_Id 
                               # the pattern to look for when interrogating a POJO for a primary key field
                               # allowed values are a either a literal, ex: id OR 
                           # POJOName with a suffix, ex: _pojoName_Id will handle accountId, customerId, etc...                 
#
# DevOps Project Creation Options
#    	
    options:
#            
# Application parameters
#            
    
        application:
            name:                  axon-mongo-crud-demo
            description:           Demo Axon project generated by Harbormaster
            author:                Dev Team
            email:                 xxxx.xxxxxxxxx@xxxxxxxx.com
            application logo URL:  ./img/turnstone.biologics.png
            company name:          Turnstone Biologics
            version:               0.0.1
            adminUserId:           admin	# use this and the adminPassword to access the application at the default URL
            adminPassword:         letmein2

#            
# Docker parameters
#            
        docker:
            inUse:        true
            userName:     tylertravismya
            password:     69cutlass
            orgName:      theharbormaster
            repo:         axon-demo
            tag:          latest
            host:         #empty uses docker hub default             

#
# Git repository parameters
#
        git:            
            inUse:       false
            name:        git_test_go 
            username:    complexmathguy
            password:    00Corvette!!
            repository:  axon-demo
            tag:         latest
            host:        github.com              

#
# resources: Apply your own resources (files) to a project generation session.  The file name applied
#                must be one that is part of the project generation for the selected tech stack.
# 
#            The name(s) applied here must have been previously published using something like...
#                harbormaster_cli resource_publish ./some_path/Dockerfile my_resource_file_name GENERIC  
#
#            To see the list of available resources on a Harbormaster instance using command:
#                harbormaster_cli resource_list --output pretty            
#        resources:        
#            available:          myK8AccountCredentials
             
#            
# CI/CD parameters
#            
        cicd:
            platform: circleci                           # options:  codeship, circleci, jfrog.pipelines
                                                         #           jenkins, azure, aws, gitlab, 
                                                         #           bitbucket, github           

#            
# Artifact repository for build dependencies and binaries            
#
        artifact-repo:
            inUse:              false
            type:               jfrog                  # options: nexus, jfrog
            userName:           xxxxxxx
            password:           xxxxxxxx
            email:              xxxx.xxxxxx@xxxxxxx.com
            repoUrl:            http://xxx.xxx.xxx.xxx:8081/repository/npm-public
           
#            
# Spring properties
#

        spring:
           server-port:              8011
           entity-store-type:        h2 #options - h2, mysql, postgres, mongodb
           entity-store-url:         jdbc:h2:~/axondemotester #mongodb://localhost:27017/axondemo #jdbc:h2:~/axondemo
           database-name:            axondemotester
           database-username:
           database-password:
           spring-profiles-active:
#            
# Axon Framework properties
#
        axon-framework:
           axonserver-token:         
           axonserver-context:       context1      
           event-store-type:         mongodb #options - axon, jpa:h2, jpa:mysql, jpa:postgres, mongodb
           event-store-url:          mongodb://localhost:27017# jdbc:h2:~/axonjpatest #mongodb://localhost:27017 

           use-axon-server:          true
           axonserver-servers:       localhost
           enable-monitoring:        true
           enable-tracing:           true
           use-snapshot:             true
           default-snapshot-threshold: 50
           sagas-collection-name:    sagas
           snapshot-events-collection-name: snapshot-events
           domain-events-collection-name: domain-events
 #          saga-store-type:          jpa
 #          token-store-type:         jpa       
           enableDiscoveryClient:   false
           generateEurekaDiscoveryServer: false

#            
# Axon Server properties
#
        axon-server:
           useCluster:               false
           total-nodes:              3
           first-node-url:
           cluster-contexts:         _admin,default
           internal-token:           fb691d69-269d-4ce3-bc52-88dbb677060b
           domain:
           accesscontrol:            true
           enable-monitoring:        true
           enable-tracing:           true
           jaeger-endpoint:          localhost:14268/api/traces



            
    